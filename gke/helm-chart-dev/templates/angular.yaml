apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-{{ .Values.app.frontendName }}-service"
  labels:
    app.kubernetes.io/name: {{ .Values.app.frontendName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  type: {{ .Values.service.type }}
  ports:
    - port: {{ .Values.service.port }}
      targetPort: http-frontend
      protocol: TCP
      name: somename
  selector:
    app.kubernetes.io/name: {{ .Values.app.frontendName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-{{ .Values.app.frontendName }}-deployment"
  labels:
    app.kubernetes.io/name: {{ .Values.app.frontendName }}
    app.kubernetes.io/instance: {{ .Release.Name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.app.frontendName }}
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.app.frontendName }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        date: "{{ .Release.Time.Seconds }}"
    spec:
      containers:
        - name: {{ .Values.app.frontendName }}
          image: "{{ .Values.imageclient.repository }}:{{ .Values.imageclient.tag }}"
          imagePullPolicy: {{ .Values.imageclient.pullPolicy }}
          resources:
            requests:
              cpu: 50m
          ports:
           - name: http-frontend
             containerPort: {{ .Values.frontendContainersPort }}
           - name: https
             containerPort: 443
          volumeMounts:
           - name: nginx-config-volume
             mountPath: /etc/nginx/conf.d
      volumes:
        - name: nginx-config-volume
          configMap:
            name: "{{ .Values.app.nginx }}-configmap"